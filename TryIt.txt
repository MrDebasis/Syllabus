  @AuraEnabled(cacheable=true)
    public static List<Map<String, Object>> getPSPTrackerConfig(String objectName) {
        // Get the logged-in user's role
        User userRec = [SELECT UserRole.DeveloperName FROM User WHERE Id = :UserInfo.getUserId() LIMIT 1];
        String userRole = userRec.UserRole != null ? userRec.UserRole.DeveloperName : null;

        // Query PSPTrackerConfig__mdt records dynamically based on the object name
        List<PSPTrackerConfig__mdt> configs = [
            SELECT TableName__c, ColumnName__c, Label__c, DataType__c, Visible__c, Editable__c, ColumnWidth__c,PSSViewColumnOrder__c,
                   IsSortingApplied__c, SortDirection__c, IsASCSortDirection__c, IsDESCSortDirection__c,
                   PickListValues__c, IsString__c, IsNumber__c, IsDate__c, IsPickList__c, UserRole__c
            FROM PSPTrackerConfig__mdt
            WHERE TableName__c = :objectName AND UserRole__c LIKE :('%' + userRole + '%')
        ];

        // Transform the data into the required format
        List<Map<String, Object>> columnConfig = new List<Map<String, Object>>();
        for (PSPTrackerConfig__mdt config : configs) {
            Map<String, Object> column = new Map<String, Object>();
            column.put('column_id', config.ColumnName__c);
            column.put('label', config.Label__c);
            column.put('data_type', config.DataType__c);
            column.put('visible', config.Visible__c);
            column.put('editable', config.Editable__c);
            column.put('isString', config.IsString__c);
            column.put('isNumber', config.IsNumber__c);
            column.put('isDate', config.IsDate__c);
            column.put('isPicklist', config.IsPickList__c);
            column.put('picklist_values', config.PickListValues__c != null ? config.PickListValues__c.split(';') : null);
            column.put('isSortingApplied', config.IsSortingApplied__c);
            column.put('sortDirection', config.SortDirection__c);
            column.put('IsAscsortDirection', config.IsASCSortDirection__c);
            column.put('IsDescsortDirection', config.IsDESCSortDirection__c);
            column.put('PSSViewColumnOrder', config.PSSViewColumnOrder__c);
            column.put('ColumnWidth', config.ColumnWidth__c);
            columnConfig.add(column);
        }

        return columnConfig;
    }
