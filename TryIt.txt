public with sharing class TripFileService {
    @AuraEnabled(cacheable=true)
    public static Map<Id, Id> getLatestTripContentDocumentMap(List<Id> tripIds) {
        Map<Id, Id> tripToLatestDocMap = new Map<Id, Id>();

        // Query links and order by CreatedDate DESC to get latest document first
        List<ContentDocumentLink> docLinks = [
            SELECT ContentDocumentId, LinkedEntityId,
                   ContentDocument.CreatedDate
            FROM ContentDocumentLink
            WHERE LinkedEntityId IN :tripIds
            ORDER BY ContentDocument.CreatedDate DESC
        ];

        for (ContentDocumentLink link : docLinks) {
            // Add only the first (latest) document per Trip
            if (!tripToLatestDocMap.containsKey(link.LinkedEntityId)) {
                tripToLatestDocMap.put(link.LinkedEntityId, link.ContentDocumentId);
            }
        }

        return tripToLatestDocMap;
    }
}
