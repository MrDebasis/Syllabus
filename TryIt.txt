buildLightningColumns(columns) {
            return columns
                .filter(col => col.visible)
                .sort((a, b) => {
                    if (a.PSSViewColumnOrder__c != null && b.PSSViewColumnOrder__c != null) {
                        return a.PSSViewColumnOrder__c - b.PSSViewColumnOrder__c;
                    }
                    return a.column_id.localeCompare(b.column_id);
                })
                .map(col => {
                    let type = 'text';
                    let typeAttributes;
    
                    const dataType = col.data_type?.toLowerCase() || 'string';
                    const field = col.column_id.toLowerCase();
    
                    if (col.column_id === 'ContactName__c') {
                        type = 'url';
                        typeAttributes = {
                            label: {
                                fieldName: 'ContactName__c'
                            },
                            target: '_blank'
                        };
                        // Make sure fieldName is accountUrl, not ContactName__c
                        return {
                            label: col.label,
                            fieldName: 'accountUrl', // important: URL must be in fieldName
                            editable: col.editable,
                            sortable: col.isSortingApplied,
                            type,
                            typeAttributes
                        };
                    }
                    else if (col.column_id == 'TripName__c') {
                        type = 'url';
                        typeAttributes = {
                            label: {
                                fieldName: 'TripName__c'
                            },
                            target: '_blank'
                        };
                        // Make sure fieldName is accountUrl, not ContactName__c
                        return {
                            label: col.label,
                            fieldName: 'tripUrl', // important: URL must be in fieldName
                            editable: col.editable,
                            sortable: col.isSortingApplied,
                            type,
                            typeAttributes
                        };
                    } else {
                        switch (dataType) {
                            case 'number':
                                type = 'number';
                                break;
                            case 'date':
                            case 'datetime':
                                type = 'date';
                                break;
                            case 'picklist':
                                type = 'picklist';
                                if (col.picklistValues) {
                                    const options = col.picklistValues.split(';').map(val => ({
                                        label: val.trim(),
                                        value: val.trim()
                                    }));
                                    typeAttributes = {
                                        options,
                                        placeholder: 'Select',
                                        value: { fieldName: col.column_id },
                                        context: { fieldName: 'Id' }
                                    };
                                }
                                break;
                            default:
                                // âœ… Detect phone fields and apply 'phone' type
                                if (field.includes('phone')) {
                                    type = 'phone';
                                } else {
                                    type = 'text';
                                }
                        }
                    }
    
                    return {
                        label: col.label,
                        fieldName: col.column_id,
                        editable: col.editable,
                        sortable: col.isSortingApplied,
                        type,
                        typeAttributes
                    };
                });
        }
