if (contentVersionId == null) {
    newVersion = new ContentVersion(
        Title = fileName,
        PathOnClient = fileName,
        VersionData = EncodingUtil.base64Decode(base64Chunk),
        FirstPublishLocationId = UserInfo.getUserId(), // Associate with the user or a record
        IsMajorVersion = false
    );
    insert newVersion;
} else {
    // Create a new ContentVersion record for each chunk
    newVersion = new ContentVersion(
        Title = fileName,
        PathOnClient = fileName,
        VersionData = EncodingUtil.base64Decode(base64Chunk),
        ContentDocumentId = contentVersionId, // Associate with previous ContentDocument
        IsMajorVersion = false
    );
    insert newVersion;
}


uploadChunkToContentDocument({
    fileName: fileName,
    base64Chunk: chunk,
    contentType: contentType,
    isLastChunk: endPosition >= base64Data.length,
    contentVersionId: contentDocumentId // Use ContentDocumentId instead
})
.then((returnedId) => {
    if (!contentDocumentId) {
        contentDocumentId = returnedId; // Set ContentDocumentId from the first response
    }
    if (endPosition < base64Data.length) {
        startPosition = endPosition;
        endPosition = Math.min(startPosition + CHUNK_SIZE, base64Data.length);
        uploadChunk();
    } else {
        this.uploadedFileIds.push(contentDocumentId);
        this.showSuccessMessage("File uploaded successfully!");
        this.isLoading = false;
    }
});
