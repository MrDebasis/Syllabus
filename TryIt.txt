import { LightningElement,api,track } from 'lwc';
import myResource from '@salesforce/resourceUrl/Patient_Portal';

export default class GenericCustomTooltip_LWCComponent extends LightningElement {
    showToolTip = false;
    tooltipMsgIcon = `${myResource}/icons/toolTipMsg.svg`;
    @api infoMsg;
    @api nubbinPosition = 'bottom-left';

    @api isTutorial =false;
    @api btnLabel = 'Next';
    connectedCallback() {
      /*adding eventlistner to document to close tooltip on click on document*/
      document.addEventListener('click', () => {
        this.showToolTip = false;
      });
    }
    /*Method to called on click of tooltip icon*/
    handleToolTip(e) {
      
      e.stopPropagation();
      this.showToolTip = !this.showToolTip;
    }
    get tooltipPosition() {
      let cls = 'slds-popover slds-popover_tooltip tooltip-msg ';
      cls = `${cls}slds-nubbin_${this.nubbinPosition}`;
      return cls;
    }
    closeToolTip(e){
       //e.stopPropagation();
       //this.showToolTip = false;
    }

    @api pageName= 'InitialScreen';
    @track currentScreenIndex=2;
    @track flowScreens = 
    {
        'InitialScreen' : 
            {
                2 : {bool : 'isToturialBtnClicked1' }, 
                3 : {bool : 'isToturialBtnClicked2' },
                4 : {bool : 'isToturialBtnClicked3'}
            },
        'Daily Summaries' : 
            {
                1 : {bool : 'includeOrdersScreen'},
                2 : {bool : 'accountBuyerScreen' }, 
                3 : {bool : 'lastScreenBool' }, 
                4 : {bool : 'dupeSubScreenBool'},
                5 : {bool : 'fifthScreenBool'}
            }
    }


    sendToParent;
    handleBtn(){
        debugger
        console.log('this.currentScreenIndex start '+this.currentScreenIndex);
        if(this.pageName === 'InitialScreen'){
            this.sendToParent =this.flowScreens[this.pageName][this.currentScreenIndex].bool ;
            this.dispatchEvent(new CustomEvent('handlebtndebasis', {
                detail: {
                    message: this.sendToParent
                }
            }));
            this.currentScreenIndex += 1;
          
            console.log('this.currentScreenIndex'+this.currentScreenIndex);
        }

        console.log('flag name'+this.sendToParent);
    }
}




<template if:true={isTutorial}>
    <div class="tooltip-container1">
      <div class={tooltipPosition} role="tooltip">
        <div class="slds-popover__body font-size-fourteen">{infoMsg}</div>

        <button class="slds-button slds-button_brand addNewExpenseButtonDesktop" onclick={handleBtn}>
          {btnLabel}
      </button> 
      </div>
    </div>
</template>





import { LightningElement,track } from 'lwc';
import myResource from '@salesforce/resourceUrl/Patient_Portal';
export default class ToolTipPOC extends LightningElement {
    tutorialButton = `${myResource}/icons/TutorialButton.svg`;
    isToturialBtnClicked =false;
    isToturialBtnClicked1 =false;
    isToturialBtnClicked2 =false;
    isToturialBtnClicked3 =false;




    enableToturial(){
        this.isToturialBtnClicked =true ;
    }

   @track isTrue;
    updateToturialFlag(event) {
        this.isTrue = event.detail.message;
        if(this.isTrue==='isToturialBtnClicked1'){
            this.isToturialBtnClicked =false;
            this.isToturialBtnClicked2 =false;
            this.isToturialBtnClicked3 =false;
            this.isToturialBtnClicked1 =true 
        }else if(this.isTrue==='isToturialBtnClicked2'){ 
                this.isToturialBtnClicked =false;
                this.isToturialBtnClicked2 =true;
                this.isToturialBtnClicked3 =false;
                this.isToturialBtnClicked1 =false 
        }else if(this.isTrue==='isToturialBtnClicked3'){
            this.isToturialBtnClicked =false;
            this.isToturialBtnClicked2 =false;
            this.isToturialBtnClicked3 =true;
            this.isToturialBtnClicked1 =false 
        }



    }
}




<template>
    <img class="adjImg" src={tutorialButton} alt="arrow" onclick={enableToturial}>
    <button class="slds-button slds-button_brand addNewExpenseButtonDesktop" >
        Expense details1
    </button> 

    <template if:true={isToturialBtnClicked}>
        <c-generic-custom-tooltip_-l-w-c-component info-msg="Approved expense amounts that are reimbursable through the program 1."
                                class="info-icon slds-m-right_xx-small"
                                nubbin-position="left tooltip-position-reported-expense"
                                is-tutorial ="true"
                                btn-label ="Next"
                                onhandlebtndebasis={updateToturialFlag}>
                            </c-generic-custom-tooltip_-l-w-c-component>
    </template>

    <button class="slds-button slds-button_brand addNewExpenseButtonDesktop" >
        Expense details2
    </button>  
    <template if:true={isToturialBtnClicked1}>
        <c-generic-custom-tooltip_-l-w-c-component info-msg="Approved expense amounts that are reimbursable through the program 2."
                                class="info-icon slds-m-right_xx-small"
                                nubbin-position="left demo1"
                                is-tutorial ="true"
                                btn-label ="Next"
                                onhandlebtndebasis={updateToturialFlag}>
                            </c-generic-custom-tooltip_-l-w-c-component>
    </template>

    <button class="slds-button slds-button_brand addNewExpenseButtonDesktop" >
        Expense details3
    </button>
    <template if:true={isToturialBtnClicked2}>
        <c-generic-custom-tooltip_-l-w-c-component info-msg="Approved expense amounts that are reimbursable through the program 3."
                                class="info-icon slds-m-right_xx-small"
                                nubbin-position="left demo2"
                                is-tutorial ="true"
                                btn-label ="Next"
                                onhandlebtndebasis={updateToturialFlag}>
                            </c-generic-custom-tooltip_-l-w-c-component>
    </template>
    
    
    <button class="slds-button slds-button_brand addNewExpenseButtonDesktop">
        Expense details4
    </button>  
    <template if:true={isToturialBtnClicked3}>
        <c-generic-custom-tooltip_-l-w-c-component info-msg="Approved expense amounts that are reimbursable through the program 4."
                                class="info-icon slds-m-right_xx-small"
                                nubbin-position="left demo3"
                                is-tutorial ="true"
                                btn-label ="Finish"
                                onhandlebtndebasis={updateToturialFlag}>
                            </c-generic-custom-tooltip_-l-w-c-component>
    </template>
</template>
