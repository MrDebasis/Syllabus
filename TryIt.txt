<template>
    <template if:true={currentQuestions}>
        <template for:each={currentQuestions} for:item="q">
            <div key={q.apiName}>
                <template if:true={shouldShow(q)}>
                    <lightning-input
                        label={q.label}
                        type={q.type}
                        name={q.apiName}
                        value={answers[q.apiName]}
                        onchange={handleInputChange}>
                    </lightning-input>
                </template>
            </div>
        </template>

        <div class="navigation">
            <lightning-button label="Back" onclick={handleBack} disabled={currentScreen === 1}></lightning-button>
            <lightning-button label="Next" onclick={handleNext}></lightning-button>
        </div>
    </template>
</template>

@track currentScreen = 1;
@track surveyMap = {};
@track currentQuestions = [];
@track answers = {};

connectedCallback() {
    getSurveyQuestions({ surveyType: this.surveyType }) // passed from decrypted URL
        .then(result => {
            this.surveyMap = result;
            this.loadScreen(this.currentScreen);
        });
}

loadScreen(screenNo) {
    this.currentQuestions = this.surveyMap[screenNo] || [];
}

handleInputChange(event) {
    const { name, value } = event.target;
    this.answers[name] = value;
}

handleNext() {
    this.currentScreen++;
    this.loadScreen(this.currentScreen);
}

handleBack() {
    this.currentScreen--;
    this.loadScreen(this.currentScreen);
}
