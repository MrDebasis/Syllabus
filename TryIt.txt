<template>
    <div class="slds-form-element">
        <span class="slds-form-element__label">Attachment</span>
        <div class="slds-form-element__control">
            <div class="slds-file-selector slds-file-selector_images">
                <div 
                    class="slds-file-selector__dropzone"
                    ondragover={handleDragOver}
                    ondrop={handleDrop}>
                    <span class="slds-file-selector__text">Drag and drop a file here or click to upload</span>
                </div>
                <lightning-input 
                    type="file" 
                    accept="image/png, image/jpeg"
                    onchange={handleFileChange} 
                    label="Upload File">
                </lightning-input>
            </div>
        </div>
        <template if:true={file}>
            <p>File: {file.name} ({file.size} bytes) - {file.status}</p>
        </template>
    </div>
</template>

import { LightningElement, track } from 'lwc';
import uploadFileToContentDocument from '@salesforce/apex/FileUploadHandlerDemo.uploadFile';

export default class FileUploadPOC extends LightningElement {
    @track file; // Holds the single file being uploaded

    handleDragOver(event) {
        event.preventDefault();
    }

    async handleDrop(event) {
        event.preventDefault();
        const uploadedFiles = event.dataTransfer.files;

        if (uploadedFiles.length > 1) {
            alert('Please upload only one file at a time.');
            return;
        }

        await this.processFile(uploadedFiles[0]);
    }

    async handleFileChange(event) {
        const uploadedFiles = event.target.files;

        if (uploadedFiles.length > 1) {
            alert('Please upload only one file at a time.');
            return;
        }

        await this.processFile(uploadedFiles[0]);
    }

    async processFile(file) {
        if (!file) {
            alert('No file selected.');
            return;
        }

        try {
            const fileReader = new FileReader();
            fileReader.readAsDataURL(file);

            const fileData = await new Promise((resolve, reject) => {
                fileReader.onload = () => {
                    const base64 = fileReader.result.split(',')[1];
                    resolve({
                        fileName: file.name,
                        base64Data: base64,
                        contentType: file.type,
                    });
                };
                fileReader.onerror = () => reject(fileReader.error);
            });

            this.file = { ...fileData, status: 'Uploading' };

            // Upload the file to Salesforce
            await this.uploadFile(fileData);

            this.file = { ...this.file, status: 'Uploaded' };
            alert('File uploaded successfully!');
        } catch (error) {
            console.error('Error uploading file:', error);
            this.file = { ...this.file, status: 'Failed' };
            alert('Failed to upload file. Please try again.');
        }
    }

    uploadFile(fileData) {
        return uploadFileToContentDocument({
            fileName: fileData.fileName,
            base64Data: fileData.base64Data,
            contentType: fileData.contentType,
        });
    }
}
.slds-file-selector__dropzone {
    border: 2px dashed #0070d2;
    border-radius: 0.25rem;
    padding: 1rem;
    text-align: center;
    margin-bottom: 1rem;
    cursor: pointer;
}

.slds-file-selector__dropzone:hover {
    background-color: #f4f6f9;
}
