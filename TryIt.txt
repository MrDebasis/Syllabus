handleSave(event) {
                const rowId = event.target.dataset.id;
            
                // Prepare the payload dynamically
                const updatedRow = this.processedCases.find(row => row.Id === rowId);
                if (!updatedRow) {
                    console.warn(`No row found with rowId: ${rowId}`);
                    return;
                }
            
                const updatedValues = this.editedValues[rowId];
                const payload = {
                    recordId: rowId,
                    fields: Object.keys(updatedValues).map(fieldName => ({
                        fieldName: fieldName,
                        value: updatedValues[fieldName]
                    }))
                };
            
                console.log('Payload to send to backend:', JSON.stringify(payload)); // Debug log
            
                // Call Apex method via Lightning Web Component (LWC)
                saveRecord({ payload })
                    .then(() => {
                        console.log(`Record with rowId: ${rowId} saved successfully.`);
                        this.processedCases = this.processedCases.map(row => {
                            if (row.Id === rowId) {
                                return {
                                    ...row,
                                    isEditing: false,
                                    detailRowKeyForSaveAndCancel: null,
                                    columns: row.columns.map(col => ({
                                        ...col,
                                        value: updatedValues[col.field] || col.value,
                                        isEditing: false
                                    }))
                                };
                            }
                            return row;
                        });
                        delete this.editedValues[rowId];
                    })
                    .catch(error => {
                        console.error(`Error saving record with rowId: ${rowId}`, error);
                    });
            }
