
public with sharing class FileUploadHandler {
    @AuraEnabled
    public static void uploadFile(String fileName, String base64Data, String contentType) {
        try {
            ContentVersion contentVersion = new ContentVersion();
            contentVersion.Title = fileName;
            contentVersion.PathOnClient = fileName;
            contentVersion.VersionData = EncodingUtil.base64Decode(base64Data);
            contentVersion.IsMajorVersion = true;
            insert contentVersion;
        } catch (Exception e) {
            throw new AuraHandledException('File upload failed: ' + e.getMessage());
        }
    }
}


import { LightningElement } from 'lwc';
import uploadFileToContentDocument from '@salesforce/apex/FileUploadHandler.uploadFile';

export default class FileUploader extends LightningElement {
    handleFileChange(event) {
        const file = event.target.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onloadend = () => {
                const base64 = reader.result.split(',')[1];
                const fileData = {
                    fileName: file.name,
                    base64,
                    contentType: file.type
                };
                this.uploadFile(fileData);
            };
            reader.readAsDataURL(file);
        }
    }

    uploadFile(fileData) {
        uploadFileToContentDocument({ 
            fileName: fileData.fileName, 
            base64Data: fileData.base64, 
            contentType: fileData.contentType 
        })
        .then(() => {
            alert('File uploaded successfully!');
        })
        .catch(error => {
            console.error('Error uploading file:', error);
        });
    }
}


<template>
    <div class="slds-form-element">
        <span class="slds-form-element__label" id="file-selector-primary-label-101">Attachment</span>
        <div class="slds-form-element__control">
            <div class="slds-file-selector slds-file-selector_images">
                <div class="slds-file-selector__dropzone">
                    <input 
                        type="file" 
                        class="slds-file-selector__input slds-assistive-text" 
                        accept="image/png, image/jpeg" 
                        id="file-upload-input-103" 
                        aria-labelledby="file-selector-primary-label-101 file-selector-secondary-label102" 
                        onchange={handleFileChange} />
                    <label class="slds-file-selector__body" for="file-upload-input-103" id="file-selector-secondary-label102">
                        <span class="slds-file-selector__button slds-button slds-button_neutral">
                            <svg class="slds-button__icon slds-button__icon_left" aria-hidden="true">
                                <use xlink:href="/assets/icons/utility-sprite/svg/symbols.svg#upload"></use>
                            </svg>
                            Upload Image
                        </span>
                        <span class="slds-file-selector__text slds-medium-show">or Drop Image</span>
                    </label>
                </div>
            </div>
        </div>
    </div>
</template>
