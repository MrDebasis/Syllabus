import { LightningElement, api, track } from 'lwc';

export default class MyComponent extends LightningElement {
    @api objectsArray = [];
    @track currentlySelectedData = [];
    @track fieldsToHighlight = ['Name', 'Email', 'Company', 'Phone', 'Status']; // Specify fields to highlight

    handleRowSelection(event) {
        // Handle row selection logic
        this.currentlySelectedData = this.calculateFieldClasses([...event.detail.selectedRows]);
    }

    calculateFieldClasses(data) {
        if (data.length === 0) return data;

        const fieldNames = Object.keys(data[0]);

        return data.map(item => {
            const updatedItem = { ...item };
            fieldNames.forEach(fieldName => {
                if (this.fieldsToHighlight.includes(fieldName)) {
                    const values = data.map(obj => obj[fieldName]);
                    const allValuesSame = values.every(value => value === values[0]);

                    // Add a class to the field if values are not the same
                    updatedItem[`${fieldName}Class`] = allValuesSame ? '' : 'highlight';
                }
            });
            return updatedItem;
        });
    }
}
