createPaginationMap(data) {
    const itemsPerPage = 10; // Number of items per page
    const paginatedMap = new Map();
    const totalPages = Math.ceil(data.length / itemsPerPage);

    for (let i = 0; i < totalPages; i++) {
        const start = i * itemsPerPage;
        const end = start + itemsPerPage;
        paginatedMap.set(i + 1, data.slice(start, end));
    }

    return paginatedMap;
}


get casesFiltered() {
    return this._casesFiltered;
}

set casesFiltered(value) {
    // âœ… ADDED: Sort before paginating
    const sortedValue = this.customSortByNextActionFields([...value]); // Clone to avoid mutating original
    this._casesFiltered = sortedValue;

    this.paginatedCasesMap = this.createPaginationMap(sortedValue); // Create a map for paginated data
    this.currentPage = 1; // Initialize to the first page
    this.updatePaginationState(); // Update the pagination state
}
