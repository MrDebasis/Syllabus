@wire(getFilteredCases, { 
    filterType: '$filterType', 
    caseOwnerIds: '$computedCaseOwnerIds' 
})
wiredCases(result) {
    this.wiredCasesResult = result;
    const { data, error } = result;
    this.isLoading = true;

    if (data) {
        this.cases = data.map(caseItem => {
            let tripStatus = '-';
            let tripDates = '-';

            if (caseItem.Trips__r && caseItem.Trips__r.length > 0) {
                const inProgressTrip = caseItem.Trips__r.find(trip => trip.TripState__c === 'In Progress');
                const preTrip = caseItem.Trips__r.find(trip => trip.TripState__c === 'Pre - Trip');
                const anyTrip = inProgressTrip || preTrip || caseItem.Trips__r[0];

                // Set tripStatus
                if (inProgressTrip) {
                    tripStatus = `Travel Coordination - ${inProgressTrip.TripState__c}`;
                } else if (preTrip) {
                    tripStatus = `Travel Coordination - ${preTrip.TripState__c}`;
                }

                // Set tripDates
                if (anyTrip) {
                    const { TravelType__c, InfusionMonitoringArrivalTravelDate__c, InfusionMonitoringReturnTravelDate__c } = anyTrip;
                    tripDates = `${TravelType__c || ''} - ${InfusionMonitoringArrivalTravelDate__c || ''} - ${InfusionMonitoringReturnTravelDate__c || ''}`;
                }
            }

            return {
                ...caseItem,
                tripStatus,
                tripDates
            };
        });

        console.log('Fetched cases with tripStatus and tripDates:', JSON.stringify(this.cases));
        this.casesFiltered = this.cases;
        this.isLoading = false;
    } else if (error) {
        console.error('Error fetching filtered cases:', error);
        this.isLoading = false;
    }
}
