updateNextActionHighlighting(processedCases) {
    return processedCases.map(row => {
        let dueDate = null;
        let nextActionValue = null;

        // Extract values for logic
        row.columns.forEach(col => {
            if (col.field === 'nextactionduedate__c') {
                dueDate = col.value ? new Date(col.value) : null;
            }
            if (col.field === 'nextaction__c') {
                nextActionValue = col.value;
            }
        });

        const today = new Date();
        today.setHours(0, 0, 0, 0);

        const isFutureDate = dueDate && dueDate > today;
        const isNextActionEmpty = [null, '', undefined].includes(nextActionValue);

        return {
            ...row,
            columns: row.columns.map(col => {
                let cellClass = col.cellClass;

                if (col.field === 'nextactionduedate__c') {
                    cellClass = isFutureDate ? 'highlight-red' : '';
                }

                if (col.field === 'nextaction__c') {
                    if (isFutureDate) {
                        cellClass = 'highlight-red';
                    } else if (isNextActionEmpty) {
                        cellClass = 'highlight-yellow';
                    } else {
                        cellClass = '';
                    }
                }

                return {
                    ...col,
                    cellClass
                };
            })
        };
    });
}
