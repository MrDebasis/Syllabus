public class EncryptionService {

    private static final String ALGORITHM = 'AES256';

    /**
     * Encrypt a plain text string using AES256 and password from Custom Label.
     * Uses Crypto.encryptWithManagedIV for automatic IV management.
     */
    public static String encrypt(String plainText) {
        String password = Label.EncryptionPasswordLabel;
        Blob key = getKeyFromPassword(password);
        Blob data = Blob.valueOf(plainText);

        // encryptWithManagedIV prepends the IV automatically
        Blob encryptedBlob = Crypto.encryptWithManagedIV('AES256', key, data);
        return EncodingUtil.base64Encode(encryptedBlob);
    }

    /**
     * Decrypt an encrypted Base64 string using AES256 and password from Custom Label.
     * Uses Crypto.decryptWithManagedIV to extract IV automatically.
     */
    public static String decrypt(String encryptedBase64) {
        String password = Label.EncryptionPasswordLabel;
        Blob key = getKeyFromPassword(password);
        Blob encryptedBlob = EncodingUtil.base64Decode(encryptedBase64);

        Blob decryptedBlob = Crypto.decryptWithManagedIV('AES256', key, encryptedBlob);
        return decryptedBlob.toString();
    }

    /**
     * Creates a 256-bit key from password using SHA-256 hash.
     */
    private static Blob getKeyFromPassword(String password) {
        return Crypto.generateDigest('SHA-256', Blob.valueOf(password));
    }
}
