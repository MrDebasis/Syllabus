<lightning-file-upload
    name="fileUploader"
    accept={acceptedFormats}
    record-id={recordId}
    oncontentupload={handleFileSelection}
    onuploadfinished={handleUploadFinished}
    multiple>
</lightning-file-upload>

<template if:true={fileUploadError}>
    <p class="slds-text-color_error">{fileUploadError}</p>
</template>


import { LightningElement, track } from 'lwc';

export default class FileUploadComponent extends LightningElement {
    @track fileUploadError = ''; // Track error message
    acceptedFormats = [".pdf", ".png", ".jpg", ".jpeg", ".heic"]; // Allowed file types

    handleFileSelection(event) {
        this.fileUploadError = ''; // Reset error message
        const files = event.detail.files;

        for (let file of files) {
            const fileType = file.name.split('.').pop(); // Extract file extension

            if (!this.acceptedFormats.includes(`.${fileType.toLowerCase()}`)) {
                this.fileUploadError = `The file type .${fileType} is not supported. Please upload a valid file.`;
                
                // Reset file input (since we can't prevent the upload directly)
                this.template.querySelector('lightning-file-upload').value = null;
                
                return; // Stop processing further files
            }
        }
    }

    handleUploadFinished(event) {
        // Handle successful upload
        console.log('Upload successful:', event.detail.files);
    }
}
