<template>
    <lightning-card title="Travel Dates">
        <div class="slds-p-around_medium">
            <h3 class="slds-text-heading_medium">Please enter your travel details:</h3>

            <template for:each={dateList} for:item="item" for:index="index">
                <div key={item.id} class="slds-box slds-m-top_small">
                    <lightning-input type="date" label="Arrival Date" value={item.arrivalDate} data-id={item.id} data-type="arrival" onchange={handleDateChange}></lightning-input>
                    <lightning-input type="date" label="Departure Date" value={item.departureDate} data-id={item.id} data-type="departure" onchange={handleDateChange}></lightning-input>
                </div>
            </template>

            <div class="slds-m-top_medium">
                <lightning-button label="Add Dates" onclick={addDateFields} class="slds-m-right_small"></lightning-button>
                <lightning-button label="Print Data" onclick={printData} variant="brand"></lightning-button>
            </div>

            <template if:true={jsonData}>
                <div class="slds-m-top_medium">
                    <p><strong>Collected Data:</strong></p>
                    <pre>{jsonData}</pre>
                </div>
            </template>
        </div>
    </lightning-card>
</template>


import { LightningElement, track } from 'lwc';

export default class ArrivalDepartureForm extends LightningElement {
    @track dateList = [
        { id: 1, arrivalDate: '', departureDate: '' }
    ];
    @track jsonData;

    nextId = 2;

    addDateFields() {
        this.dateList = [
            ...this.dateList,
            { id: this.nextId++, arrivalDate: '', departureDate: '' }
        ];
    }

    handleDateChange(event) {
        const id = parseInt(event.target.dataset.id, 10);
        const type = event.target.dataset.type;
        const value = event.target.value;

        this.dateList = this.dateList.map(item => {
            if (item.id === id) {
                return {
                    ...item,
                    [type === 'arrival' ? 'arrivalDate' : 'departureDate']: value
                };
            }
            return item;
        });
    }

    printData() {
        // You can also send this data to Apex if needed
        this.jsonData = JSON.stringify(this.dateList, null, 2);
        console.log('Collected Dates:', this.dateList);
    }
}
