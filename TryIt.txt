public with sharing class FileUploadController {
    @AuraEnabled
    public static String uploadChunkToContentDocument(
        String fileName,
        String base64Chunk,
        String contentType,
        Boolean isLastChunk,
        String contentDocId
    ) {
        try {
            ContentVersion newVersion;
            if (contentDocId == null) {
                // First chunk: create a new ContentVersion
                newVersion = new ContentVersion(
                    Title = fileName,
                    PathOnClient = fileName,
                    VersionData = EncodingUtil.base64Decode(base64Chunk),
                    IsMajorVersion = true
                );
                insert newVersion;
            } else {
                // Subsequent chunks: append data
                ContentVersion existingVersion = [SELECT Id, VersionData FROM ContentVersion WHERE ContentDocumentId = :contentDocId ORDER BY CreatedDate DESC LIMIT 1];
                String previousData = EncodingUtil.base64Encode(existingVersion.VersionData);
                String updatedData = previousData + base64Chunk;
                existingVersion.VersionData = EncodingUtil.base64Decode(updatedData);
                update existingVersion;
                newVersion = existingVersion;
            }

            if (isLastChunk) {
                return newVersion.ContentDocumentId;
            }

            return newVersion.Id;
        } catch (Exception e) {
            throw new AuraHandledException("Error uploading file: " + e.getMessage());
        }
    }
}
