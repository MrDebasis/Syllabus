try {
    if (String.isNotBlank(soql)) {
        List<SObject> records = Database.query(soql);
        resultMap.put(objName, new TableConfigWrapper(objName, objectColumnsMap.get(objName), records));
    }
} catch (Exception ex) {
    System.debug('Query failed for ' + objName + ': ' + ex.getMessage());
}


when 'echosign_dev1__SIGN_Agreement__c' {
    // Step 1: Aggregate latest CreatedDate per trip for the case
    List<AggregateResult> latestDates = [
        SELECT Trip__c, MAX(CreatedDate) latestDate
        FROM echosign_dev1__SIGN_Agreement__c
        WHERE Trip__c IN (SELECT Id FROM Trip__c WHERE RelatedCase__c = :caseId)
        GROUP BY Trip__c
    ];

    List<SObject> records = new List<SObject>();

    // Step 2: For each Trip, get the agreement with latest CreatedDate
    for (AggregateResult ar : latestDates) {
        Id tripId = (Id) ar.get('Trip__c');
        Datetime latestDate = (Datetime) ar.get('latestDate');

        String agreementSoql = 'SELECT ' + fieldStr +
            ' FROM echosign_dev1__SIGN_Agreement__c WHERE Trip__c = :tripId AND CreatedDate = :latestDate';

        records.addAll(Database.query(agreementSoql));
    }

    resultMap.put(objName, new TableConfigWrapper(objName, objectColumnsMap.get(objName), records));
    continue; // Skip the general try-catch since we've already handled this
}
