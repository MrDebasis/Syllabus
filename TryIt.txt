@track file; // Tracks the file upload status

handleFileChange(event) {
    const file = event.target.files[0];
    try {
        if (!file) {
            return;
        }

        const allowedFileTypes = ['heic', 'jpeg', 'jpg', 'png', 'pdf'];
        const fileExtension = file.name.split('.').pop().toLowerCase();

        if (file.name && allowedFileTypes.includes(fileExtension)) {
            if (file.size !== undefined && file.size > 25 * 1024 * 1024) { // File size validation
                this.showErrorMessage('File size limit is 25MB. Please try again.', true);
                return;
            } else {
                this.showErrorMessage('', false);
            }

            try {
                this.readFile(file);
            } catch (error) {
                this.showErrorMessage('Error in uploading. Please try again.', true);
            }
        } else {
            this.showErrorMessage('Unsupported file type. Please upload a file in JPEG, PNG, PDF, or HEIC format.', true);
            return;
        }
    } catch (error) {
        this.showErrorMessage('Error in uploading. Please try again.', true);
    }
}

readFile(file) {
    const fileReader = new FileReader();

    fileReader.onload = () => {
        const base64 = fileReader.result.split(',')[1]; // Extract Base64
        const fileData = {
            fileName: file.name.split('.')[0],
            base64Data: base64,
            contentType: file.name.split('.').pop().toLowerCase(),
        };
        try {
            this.uploadFile(fileData);
        } catch (error) {
            this.showErrorMessage('Error in uploading. Please try again.', true);
        }
        this.showErrorMessage('', false);
    };

    fileReader.onerror = () => {
        this.showErrorMessage('Error in uploading. Please try again.', true);
    };

    fileReader.readAsDataURL(file); // Read file as Base64
}

uploadFile(fileData) {
    this.isLoading = true;
    this.enableNextButton = false;
    this.validateForNextButton();

    uploadFileToContentDocument(fileData)
        .then((contentDocumentId) => {
            if (contentDocumentId) {
                console.log('contentDocumentId:', contentDocumentId);

                this.strContentDocId.push(contentDocumentId);

                if (this.strContentDocId.length !== 0) {
                    this.contentDocumentIds = contentDocumentId;
                    this.fetchFileVersions();
                    this.isDisabled = true;
                    this.showEvent();
                    this.enableNextButton = true;
                    this.validateForNextButton();
                } else {
                    this.isLoading = false;
                    this.showWhenImageIsAvailable = false;
                }
            }
            this.file = { ...fileData, status: 'Uploaded' };
        })
        .catch((error) => {
            this.showErrorMessage('Error in uploading. Please try again.', true);
            this.isLoading = false;
            this.enableNextButton = true;
            this.validateForNextButton();
        });
}

// Other parts of the code remain unchanged
