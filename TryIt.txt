 @track fileList = [];
    @track files = [];
    receiptImage = pdfImage;
    isFileLoaded = false;
    @track showWhenImageIsAvailable = false;
    @api contentDocumentIds;

    async fetchFileVersions() {
        try {
            this.isFileLoaded = false; // Reset loading state

            if (!this.contentDocumentIds || this.contentDocumentIds.length === 0) {
                console.log('No contentDocumentIds provided.');
                return;
            }

            // Call the Apex method
            const data = await getFileVersions({ recordIds: this.contentDocumentIds });

            if (data) {
                this.fileList = data;
                this.files = data.map((file) => ({
                    Id: file.Id, // ContentVersionId
                    Title: file.Title,
                    Extension: file.FileExtension,
                    ContentDocumentId: file.ContentDocumentId,
                    ContentDocument: file.ContentDocument,
                    CreatedDate: file.CreatedDate,
                    thumbnailFileCard:
                        "/sfc/servlet.shepherd/version/renditionDownload?rendition=THUMB720BY480&versionId=" +
                        file.Id +
                        "&operationContext=CHATTER&contentId=" +
                        file.ContentDocumentId,
                    downloadUrl:
                        "/sfc/servlet.shepherd/document/download/" +
                        file.ContentDocumentId,
                    pdfURL:
                        file.FileExtension === 'pdf'
                            ? this.receiptImage
                            : "/sfc/servlet.shepherd/document/download/" + file.ContentDocumentId
                }));

                this.showWhenImageIsAvailable = this.files.length > 0;
            }

            this.isFileLoaded = true; // Mark loading as complete
        } catch (error) {
            console.error('Error fetching file versions:', error);
            this.dispatchEvent(
                new ShowToastEvent({
                    title: "Error loading Files",
                    message: error.body ? error.body.message : error.message,
                    variant: "error"
                })
            );
        }
    }
